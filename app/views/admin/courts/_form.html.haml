= simple_form_for([:admin, @court], :html => {:multipart => true}, defaults: {placeholder: false, hint: false}) do |f|
  - if @court.errors.any?
    #error_explanation
      %h2
        = pluralize(@court.errors.count, "error")
        prohibited this court from being saved:
      %ul
        - @court.errors.full_messages.each do |msg|
          %li= msg

  .visuallyhidden
    Old ID:
    %strong= @court.old_id
    Old Court Type ID:
    %strong= @court.old_court_type_id
    Image ref:
    %strong= @court.image

  %p Items marked * are mandatory

  #edit-tabs.js-tabs{"data-activatefirst" => "true"}
    %ul.cf.js-tabs-nav
      %li
        %a{:href => "#basic-info"} Basic info
      %li
        %a{:href => "#court-types"} Court types
      %li
        %a{:href => "#urgent-notice"} Urgent notice
      %li
        %a{:href => "#addresses"} Addresses
      %li
        %a{:href => "#photo"} Photo
      %li
        %a{:href => "#opening-times"} Opening times
      %li
        %a{:href => "#contact-numbers"} Contact Numbers
      %li
        %a{:href => "#email-contacts"} Email
      %li
        %a{:href => "#areas-of-law"} Areas of law
      %li
        %a{:href => "#facilities"} Facilities
      %li
        %a{:href => "#parking"} Parking
      %li
        %a{:href => "#further-info"} Further information
      - if current_user.admin
        %li
          %a{:href => "#visitor-info"} Specific visitor information
    .js-tabs-content
      #basic-info
        - if current_user.admin
          = f.input :name
          = f.input :slug, :wrapper_html => { :class => 'admin-only'}, :hint => '(Admin only) A unique identifier which forms part of the URL. Leave blank for it to auto-generate.'
        - else
          = f.input :name, disabled: true
          = f.input :slug, disabled: true

        = f.input :court_number
        = f.input :cci_code
        = f.association :area, :hint => 'Used on <a href="/regions" rel="help">Browse regions</a>'
      #court-types
        %h2 Court types
        = f.association :court_types, :collection => CourtType.all, :as => :check_boxes, :label => false
      #urgent-notice
        %h2 Urgent notice
        %p Use this field to display a temporary notice of building closure. This is limited to 250 characters including spaces.
        = f.input :alert, :maxlength => 250, :hint => 'Remove all text to hide the alert'
      #addresses
        %h2 Local Information
        %p Optional useful local landmarks or information that people might use to navigate to the court building. For example: 'The court is opposite the Marriot Hotel' or 'The court is signposted from the rail station.'
        = f.input :directions, label: false, :input_html => { :class => 'directions', maxlength: 250 }
        %h2 Location
        %p
          Latitude and longitude are automatically calculated based on the visiting or postal and visiting addresses postcodes.
        - if @court.latitude && @court.longitude
          = "Latitude: #{@court.latitude}, Longitude: #{@court.longitude}"
        #group-addresses
          %h2 Addresses
          = f.simple_fields_for :addresses do |builder|
            = render 'address_fields', f: builder
          = link_to_add_fields "Add address", f, :addresses, 'initNewAddressBlock'
      #photo
        %h2 Photo
        = image_tag @court.image_file, :width => '160px' if @court.image_file.present?
        = f.input :image_file
        .input.boolean.optional
          %label{:for => "court_remove_image_file", :class => "boolean optional control-label checkbox"}
            = f.check_box :remove_image_file
            remove photo
      #opening-times
        #group-opening-times
          %a.field-group{:href => "#", "data-alt" => "edit opening times"} reorder opening times
          %h2 Opening times
          %p
            Please adhere to the GOV.UK content design principles when
            = succeed '.' do
              %a{:href => "https://www.gov.uk/design-principles/style-guide/style-points#style-dates-and-times", :rel => "ext help"} entering dates and times
          %ul.sortable
            = f.simple_fields_for :opening_times do |builder|
              = render 'opening_time_fields', f: builder
          = link_to_add_fields "Add opening time", f, :opening_times, 'initNewFieldBlock'
      #contact-numbers
        #group-contacts
          %a.field-group{:href => "#", "data-alt" => "edit contacts"} reorder phone numbers
          %h2 Contact Numbers
          %p
            List phone number for enquiries first. No duplicate phone numbers. Please adhere to the GOV.UK content design principles when
            = succeed '.' do
              %a{:href => "https://www.gov.uk/design-principles/style-guide/style-points#style-phone-numbers"} entering phone numbers
          %button#sortContactNumbers Sort
          %ul.sortable#contactNumbers
            = f.simple_fields_for :contacts do |builder|
              = render 'contact_fields', f: builder
          = link_to_add_fields "Add contact information", f, :contacts, 'initNewFieldBlock'
      #email-contacts
        .group-emails
          %a.field-group{:href => "#", "data-alt" => "edit emails"} reorder emails
          %h2 Email
          %ul.sortable
            = f.simple_fields_for :emails do |builder|
              = render 'email_fields', f: builder
          = link_to_add_fields "Add email", f, :emails, 'initNewFieldBlock'
      #areas-of-law
        %h2 Cases heard at this venue
        = f.association :areas_of_law, :collection => AreaOfLaw.all, :as => :check_boxes, :label => false
        %div.hide_aols
          = f.check_box :hide_aols, :checked => @court.hide_aols
          = f.label :hide_aols, "Hide 'Cases heard at this venue'".html_safe, {class: "checkbox inline"}
      #facilities
        .group-courts-facilities
          %a.field-group{:href => "#", "data-alt" => "edit facilities"} reorder facilities
          %h2 Facilities
          %ul.sortable
            = f.simple_fields_for :court_facilities do |builder|
              = render 'court_facility_fields', f: builder
          = link_to_add_fields "Add facility", f, :court_facilities, 'initNewFieldBlock'
      #parking
        %h3 This venue has:
        %ul.parking-options
          %li
            %p On site parking, located at the venue:
            = f.input :parking_onsite, as: :radio_buttons, label: false, collection: Court.onsite_parking_options, label_method: :label, value_method: :value
          %li
            %p Off site parking, within 500m of the venue:
            = f.input :parking_offsite, as: :radio_buttons, label: false, collection: Court.offsite_parking_options, label_method: :label, value_method: :value
          %li
            %p Blue badge parking for disabled and mobility impaired people:
            = f.input :parking_blue_badge, as: :radio_buttons, label: false, collection: Court.blue_badge_parking_options, label_method: :label, value_method: :value

      #further-info
        %h2 Further information
        %p Please only add concise details about this particular court, no contact details or guidance on going to court.
        = f.input :info, :input_html => { :class => 'ckeditor' }
      - if current_user.admin
        #visitor-info
          %h2 Information leaflet updates
          %p Please add details that you wish to appear only for this court or tribunal and only on the information leaflet.
          %div
            = f.input :info_leaflet, :input_html => { :class => 'admin-only leaflet ckeditor' }
            %small.char-limit 2,500 characters max

          - if @court.leaflets.include? "defence"
            %h2 Defence witness leaflet updates
            %p Please add details that you wish to appear only for this court or tribunal and only on the defence witness leaflet.
            %div
              = f.input :defence_leaflet, :input_html => { :class => 'admin-only leaflet ckeditor' }
              %small.char-limit 2,500 characters max

          - if @court.leaflets.include? "prosecution"
            %h2 Prosecution witness leaflet updates
            %p Please add details that you wish to appear only for this court or tribunal and only on the prosecution witness leaflet.
            %div
              = f.input :prosecution_leaflet, :input_html => { :class => 'admin-only leaflet ckeditor' }
              %small.char-limit 2,500 characters max

          - if @court.leaflets.include? "juror"
            %h2 Juror leaflet updates
            %p Please add details that you wish to appear only for this court or tribunal and only on the juror leaflet.
            %div
              = f.input :juror_leaflet, :input_html => { :class => 'admin-only leaflet ckeditor' }
              %small.char-limit 2,500 characters max
      %fieldset.court-closed
        %p Un-check this box if this court or tribunal is no longer in service. Use this rather than deleting it, so that the web page still exists but informs the public the court or tribunal is now closed.
        = f.input :display

  .form-actions.cf
    = link_to 'View court', @court, class: 'button button-secondary', target: '_blank'
    = f.submit 'Update', class: 'button right'
